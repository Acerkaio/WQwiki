import{_ as t,o as a,c as e,Q as d}from"./chunks/framework.e7363dcb.js";const g=JSON.parse('{"title":"代码的值域问题","description":"","frontmatter":{},"headers":[],"relativePath":"Basicknowledge/代码的值域问题.md","filePath":"Basicknowledge/代码的值域问题.md","lastUpdated":1738591681000}'),l={name:"Basicknowledge/代码的值域问题.md"},r=d('<h1 id="代码的值域问题" tabindex="-1">代码的值域问题 <a class="header-anchor" href="#代码的值域问题" aria-label="Permalink to &quot;代码的值域问题&quot;">​</a></h1><h2 id="c-变量类型及对应范围" tabindex="-1">C++ 变量类型及对应范围 <a class="header-anchor" href="#c-变量类型及对应范围" aria-label="Permalink to &quot;C++ 变量类型及对应范围&quot;">​</a></h2><table><thead><tr><th>变量类型</th><th>范围</th></tr></thead><tbody><tr><td>char</td><td>[-128, 127]</td></tr><tr><td>unsigned char</td><td>[0, 255]</td></tr><tr><td>short</td><td>[-2^15, 2^15 - 1]</td></tr><tr><td>unsigned short</td><td>[0, 65535]</td></tr><tr><td>int</td><td>[-2^31, 2^31 - 1] &gt;= [-2e9, 2e9]</td></tr><tr><td>unsigned int</td><td>[0, 2^32 - 1]</td></tr><tr><td>long long</td><td>[-2^63, 2^63 - 1] &gt;= [-9e18, 9e18]</td></tr><tr><td>ull</td><td>[0, 2^64 - 1]</td></tr><tr><td>double</td><td>有效位数 16 位</td></tr><tr><td>long double</td><td>有效位数 19 位</td></tr></tbody></table><h2 id="模意义下运算" tabindex="-1">模意义下运算 <a class="header-anchor" href="#模意义下运算" aria-label="Permalink to &quot;模意义下运算&quot;">​</a></h2><ul><li>首先，在写代码时应非常清楚两个数相乘的值域，开对应的范围。</li><li>对于任何一个新给出的数据，都要取模。</li><li>如果要优化取模次数，一定要确认最后取了模。</li></ul><h2 id="一般意义下的运算" tabindex="-1">一般意义下的运算 <a class="header-anchor" href="#一般意义下的运算" aria-label="Permalink to &quot;一般意义下的运算&quot;">​</a></h2><h3 id="变量-数组范围估计" tabindex="-1">变量/数组范围估计 <a class="header-anchor" href="#变量-数组范围估计" aria-label="Permalink to &quot;变量/数组范围估计&quot;">​</a></h3><p>在开每一个变量/数组之前，都必须估计其范围：</p><ul><li>如果比较显然或之前算过，可以直接开出。</li><li>否则，必须在注释中打出其范围。</li></ul><p><strong>注意</strong>：实际答案取值范围是所有可能算出的值的范围。</p><h3 id="运算结果范围估计" tabindex="-1">运算结果范围估计 <a class="header-anchor" href="#运算结果范围估计" aria-label="Permalink to &quot;运算结果范围估计&quot;">​</a></h3><p>进行运算之前，都必须估计其结果范围：</p><ul><li>直接用两个变量的范围运算一下即可。</li><li>如果不太显然，就要打在注释中。</li></ul><h3 id="复杂情况分析-线段树节点的-tag" tabindex="-1">复杂情况分析（线段树节点的 tag） <a class="header-anchor" href="#复杂情况分析-线段树节点的-tag" aria-label="Permalink to &quot;复杂情况分析（线段树节点的 tag）&quot;">​</a></h3><ul><li>注意到 tag 的每个历史版本值再加上储存值都是实际答案取值范围。</li><li>所以容易分析出其 tag 就是最大变化量，计算即可。</li><li>对于一般的 tag，需要具体计算其值域。</li></ul><h2 id="特别注意" tabindex="-1">特别注意 <a class="header-anchor" href="#特别注意" aria-label="Permalink to &quot;特别注意&quot;">​</a></h2><ul><li>在打模板时不能图快，一定要特别注意上述易错点。</li><li>设定变量类型不要图快，一定要稍微考虑考虑。</li><li>实在是暂时不好分析的，可以先打出注释表示没有分析。</li></ul>',17),i=[r];function o(n,h,s,c,u,_){return a(),e("div",null,i)}const p=t(l,[["render",o]]);export{g as __pageData,p as default};
